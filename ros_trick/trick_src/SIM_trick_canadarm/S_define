// Copyright 2024 Blazej Fiderek (xfiderek)
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     https://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/************************TRICK HEADER*************************
PURPOSE:
    ( Simulate dynamics of SSRMS )
LIBRARY DEPENDENCIES:
    (
        (manipulator/manipulator.cc)
    )
*************************************************************/
#include "sim_objects/default_trick_sys.sm"

##include "include/trick/exec_proto.h"
##include "manipulator/manipulator.hh"

class ManipulatorSimObject : public Trick::SimObject
{

    public:
        Manip manip;

        ManipulatorSimObject(): manip()
        {
            ("default_data")      manip.defaultData();
            ("derivative")        manip.stateDeriv();
            ("integration")       trick_ret = manip.stateInteg();
        }

};

ManipulatorSimObject CanadarmManip;

IntegLoop armIntegLoop(0.01) CanadarmManip;

void create_connections() {
    armIntegLoop.getIntegrator(Runge_Kutta_4, 2*CanadarmManip.manip.NDOF);
}
